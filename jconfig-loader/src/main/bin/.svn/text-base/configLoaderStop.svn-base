#!/bin/sh

ROOT=${ROOT:-/home/y}
APPNAME=yjava_ymail_config_loader

# Define timer here
NOW=`date +%s`
END_TIME=`echo $NOW + 300 | bc -l`

# return all pids for java container processes
function get_pids(){
	PID=`ps aux | grep "libexec/yjava_ymail_config_loader" | grep 'bin/java' | grep -v grep | awk '{ print $2; }' | sed s/\s+//`;
}

function stop() {
    get_pids
    if [ -z "$PID" ]; then
        echo "$APPNAME is not running." 1>&2
        exit 0
    fi

    echo "Killing $PID"
    kill -15 $PID >/dev/null 2>&1
    
    OS_PID=$PID
    WAIT=360;
    EXIT_VAL=0;
    until [ $OS_PID != $PID ] || [ $WAIT = 0 ]; do
        sleep 1
        OS_PID=`ps -p $PID -o pid=`
    
        if [ "x$OS_PID" = "x" ]; then
            echo "Killed $PID"
            OS_PID=-1
        else 
            let WAIT=WAIT-1
            echo "wait time remaining: $WAIT"
        fi
    done
    
    if [ $OS_PID != -1 ]; then
        echo "SIGTERM failed, killing $PID with SIGKILL"
        EXIT_VAL=1
        # kill the main process
        kill -9 $PID >/dev/null 2>&1
    fi
    
    # clean up all the loader child processes if still running
    PKILL_EXIT=`pkill -9 -f -u $PID` >/dev/null 2>&1
    if [[ $PKILL_EXIT -ne 0 && $EXIT_VAL -eq 0 ]]; then
        echo "failed to clean up all config loader child processes"
        EXIT_VAL=1
    fi

    exit $EXIT_VAL
}


# Determine the pid dir, pid file, log dir, and log file locations

shift;
stop "$@"
echo "$APPNAME stopped"
